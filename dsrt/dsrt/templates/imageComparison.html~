{% extends 'base.html' %}

{% block title %}Search Summary{% endblock %}

{% block head %} 
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/redmond/jquery-ui.css">
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<style type="text/css">
.container {margin: 0px; padding:0px;}
#mtl {margin-top: 100px;}
#progressbar1 {width: 512px;}
#progressbar2 {width: 512px;}
#myCanvas1 {display: none;}
#myCanvas2 {display:none;}
.roiListContainer {width: 150px;}
table {table-layout:fixed;} 
.ui-progressbar { position: relative;}
.progress-label1 { position: absolute; left: 35%; top: 4px; font-weight: bold; text-shadow: 1px 1px 0 #fff;}
.progress-label2 { position: absolute; left: 35%; top: 4px; font-weight: bold; text-shadow: 1px 1px 0 #fff;}
.table tbody>tr>td {background-color:black; padding: 1px 1px 0px 1px; border-top:0px;}
.table tbody>tr>th {text-align:center; border-top: 0px; border-bottom: 1px solid #D0D0D0;}
.table {font-size: 12px;}
td.center {text-align: center; vertical-align:middle;}
th#whiteText {color: white; font-weight:bold;}
td#white{color:white; font-weight:bold;}
{% for roi in contourData %}
span#{{ roi.roiName }}_td.badge {background-color:rgb{{ roi.colorRound }};font-size:6px;border-radius:5px;}
{% endfor %}
{% for isodose in isodoseData %}
span#{{ isodose.isodoseValue }}_td.badge {background-color:rgb{{ isodose.colorRound }};font-size:6px;border-radius:5px;}
{% endfor %}
</style>
{% endblock %}

{% block body %}

<div class="container">
    <div class="row">

<!-- ###################### IMAGE 1 ################# -->

           <div class="col-md-6">
           <canvas id="myCanvas1" width="{{ width }}" height="{{ height }}"></canvas>
	   <div class="row">
                <div class="col-md-8">
                       <canvas id="scaledCanvas1" width="600" height="400"></canvas>
                       <div id="progressbar1"><div class="progress-label1"></div></div>
		</div>
            
                <div class="col-md-4">
                       <table class="table">
		             <th id="whiteText" colspan="3">SELECT REGIONS OF INTEREST</th>
		             {% for roi in contourData %}
                             <tr>
			     <td class="center"><span class="badge" id="{{ roi.roiName }}_td">&nbsp;</span></td>
                             <td id="white">{{ roi.roiName }}</td>
                             <td class="center"><input type="checkbox" id="{{ roi.roiName }}_1"></td>
		             </tr>
		             {% endfor %}
                       </table>
		       <table class="table">
		             <th id="whiteText" colspan="3">SELECT ISODOSE CURVES</th>
		             <tr><td class="center"><span class="badge" id="forty_td">&nbsp;</span></td><td id="white">40% </td><td class="center"><input type="checkbox" id="forty_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="fifty_td">&nbsp;</span></td><td id="white">50% </td><td class="center"><input type="checkbox" id="fifty_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="sixty_td">&nbsp;</span></td><td id="white">60% </td><td class="center"><input type="checkbox" id="sixty_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="seventy_td">&nbsp;</span></td><td id="white">70% </td><td class="center"><input type="checkbox" id="seventy_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="eighty_td">&nbsp;</span></td><td id="white">80% </td><td class="center"><input type="checkbox" id="eighty_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="ninety_td">&nbsp;</span></td><td id="white">90% </td><td class="center"><input type="checkbox" id="ninety_1"></td></tr>
			     <tr><td class="center"><span class="badge" id="ninetyFive_td">&nbsp;</span></td><td id="white">95%</td><td class="center"><input type="checkbox" id="ninetyFive_1"></td></tr>
		       </table>
		</div><!--mtl-->
	   </div><!--row-->
           </div>

<!-- ###################### IMAGE 2 #################### -->

           <div class="col-md-6">
           <canvas id="myCanvas2" width="{{ width }}" height="{{ height }}"></canvas>
	   <div class="row">
                <div class="col-md-8">
                       <canvas id="scaledCanvas2" width="600" height="400"></canvas>
                       <div id="progressbar2"><div class="progress-label2"></div></div>
		</div>
            
                <div class="col-md-4">
                       <table class="table">
		             <th id="whiteText" colspan="3">SELECT REGIONS OF INTEREST</th>
		             {% for roi in contourData %}
                             <tr>
			     <td class="center"><span class="badge" id="{{ roi.roiName }}_td">&nbsp;</span></td>
                             <td id="white">{{ roi.roiName }}</td>
                             <td class="center"><input type="checkbox" id="{{ roi.roiName }}_2"></td>
		             </tr>
		             {% endfor %}
                       </table>
		       <table class="table">
		             <th id="whiteText" colspan="3">SELECT ISODOSE CURVES</th>
		             <tr><td class="center"><span class="badge" id="forty_td">&nbsp;</span></td><td id="white">40% </td><td class="center"><input type="checkbox" id="forty_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="fifty_td">&nbsp;</span></td><td id="white">50% </td><td class="center"><input type="checkbox" id="fifty_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="sixty_td">&nbsp;</span></td><td id="white">60% </td><td class="center"><input type="checkbox" id="sixty_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="seventy_td">&nbsp;</span></td><td id="white">70% </td><td class="center"><input type="checkbox" id="seventy_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="eighty_td">&nbsp;</span></td><td id="white">80% </td><td class="center"><input type="checkbox" id="eighty_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="ninety_td">&nbsp;</span></td><td id="white">90% </td><td class="center"><input type="checkbox" id="ninety_2"></td></tr>
			     <tr><td class="center"><span class="badge" id="ninetyFive_td">&nbsp;</span></td><td id="white">95%</td><td class="center"><input type="checkbox" id="ninetyFive_2"></td></tr>
		       </table>
		</div><!--mtl-->
	   </div><!--row-->
           </div>

    </div><!--row-->	   
</div><!--container-->

<script>
var num1 = 0;

//******** SET COLORS ************
var isodoseColors = {'forty':[153,255,255],'fifty':[0,255,204],'sixty':[204,255,0],'seventy':[255,255,0],'eighty':[255,204,0],'ninety':[255,102,0],'ninetyFive':[255,51,51]};
var roiColors = { {% for roi in contourData %}'{{ roi.roiName }}':{{ roi.colorSquare }} {% if not forloop.last %},{% endif %}{% endfor %} };
var canvas1 = document.getElementById("myCanvas1");
var context1 = canvas1.getContext("2d");
var scaledCanvas1 = document.getElementById("scaledCanvas1");
var scaledContext1 = scaledCanvas1.getContext("2d");
scaledContext1.fillStyle="#000000";
scaledContext1.fillRect(0,0,600,400);

window.allImages1 = new Array({{ numImages }} + 1);

var c=0;
window.consolidateImages = function(pix, index) {
         c=c+1;
         var currentImage1 = context1.createImageData({{ width }},{{ height }});
	 for (var i = 0; n = pix.length, i < n; i += 4) {
                  currentImage1.data[i]=pix[i];
		  currentImage1.data[i+1]=pix[i+1];
		  currentImage1.data[i+2]=pix[i+2];
                  currentImage1.data[i+3]=pix[i+3];
	 }
	 if(index) allImages1[index] = currentImage1;
         else allImages1.push(currentImage1);

         //If the first image has loaded, display it
         if (index==0){
              context1.putImageData(currentImage1, 0, 0);
	      var currentImg1 = document.getElementById("myCanvas1");
	      scaledContext1.drawImage(currentImg1, 0, 0, 350, 350);						 
         }

         $(function() {
                $( ".progress-label1").text('Loading Images ..');
                $( "#progressbar1" ).progressbar({
                       value: c
                });
         });
 
        if (c=={{ numImages }}) document.getElementById('progressbar1').style.display = 'none';
}

for (var i = 0; n = {{ numImages }}, i < n; i += 1) {
         var jsss1 = document.createElement('script');
         jsss1.setAttribute("type", "text/javascript");
	 jsss1.setAttribute("src", "/static/jsPixelData/1/" + Math.abs(i) + ".js");
	 document.getElementsByTagName("head")[0].appendChild(jsss1);
}

//******************* DEFINE VARIABLES FOR ROIs ****************

{% for roi in contourData %}
var {{ roi.roiName }}_ct_sop_ids1 = {{ roi.contour_ct_sop_ids }};
{{ roi.roiName }}_rows1 = new Array()
{{ roi.roiName }}_columns1 = new Array()
var {{ roi.roiName }}_r1 = {{ roi.rowCoords }};
var {{ roi.roiName }}_c1 = {{ roi.columnCoords }};
    for (var n=0;n<{{ roi.roiName }}_r.length;n++) {
          {{ roi.roiName }}_rows1[n] = {{ roi.roiName }}_r1[n].substring(1,{{ roi.roiName }}_r1[n].length-1).split(",");	
          {{ roi.roiName }}_columns1[n] = {{ roi.roiName }}_c1[n].substring(1,{{ roi.roiName }}_c1[n].length-1).split(",");
	  for (var m=0 ; m<{{ roi.roiName }}_rows1[n].length;m++) {
	           {{ roi.roiName }}_rows1[n][m] = parseInt({{ roi.roiName }}_rows1[n][m]);
                   {{ roi.roiName }}_columns1[n][m] = parseInt({{ roi.roiName }}_columns1[n][m]);
          }
    }
{% endfor %}

//****************** GET SOP IDs OF ALL CT IMAGES **************

var all_ct_sop_ids1 = {{ ct_sop_ids }};

//******************* DEFINE VARIABLES FOR ISODOSE **************

{% for isodose in isodoseData %}
var {{ isodose.isodoseValue }}_ct_sop_ids1 = {{ isodose.isodose_ct_sop_ids }};
{{ isodose.isodoseValue }}_rows1 = new Array()
{{ isodose.isodoseValue }}_columns1 = new Array()
var {{ isodose.isodoseValue }}_r1 = {{ isodose.rowCoords }};
var {{ isodose.isodoseValue }}_c1 = {{ isodose.columnCoords }};
    for (var n=0;n<{{ isodose.isodoseValue }}_r1.length;n++) {
          {{ isodose.isodoseValue }}_rows1[n] = {{ isodose.isodoseValue }}_r1[n].substring(1,{{ isodose.isodoseValue }}_r1[n].length-1).split(",");	
          {{ isodose.isodoseValue }}_columns1[n] = {{ isodose.isodoseValue }}_c1[n].substring(1,{{ isodose.isodoseValue }}_c1[n].length-1).split(",");
	  for (var m=0 ; m<{{ isodose.isodoseValue }}_rows1[n].length;m++) {
	           {{ isodose.isodoseValue }}_rows1[n][m] = parseInt({{ isodose.isodoseValue }}_rows1[n][m]);
                   {{ isodose.isodoseValue }}_columns1[n][m] = parseInt({{ isodose.isodoseValue }}_columns1[n][m]);
          }
    }
{% endfor %}


// ****************** MOUSEWHEEL ACTIONS ************************

$(function () {
function wheel1(obj, fn, useCapture) {
         var mousewheelevt1 = (/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel"; //FF doesn't recognize mousewheel as of FF3.x  
         if (obj.attachEvent) //if IE (and Opera depending on user setting)  
                  obj.attachEvent("on" + mousewheelevt1, handler1, useCapture);
         else if (obj.addEventListener) //WC3 browsers  
                  obj.addEventListener(mousewheelevt1, handler1, useCapture);

         function handler1(event) {
         var delta1 = 0;
         var event1 = window.event || event;
         var delta1 = event1.detail ? -event1.detail : event1.wheelDelta / 3;
         if (event1.preventDefault)
               event1.preventDefault();
         event1.returnValue = false;
         return fn.apply(obj, [event1, delta1]);
         }
}

var slideshow1 = document.getElementById("scaledCanvas1");
var num1 = 0;

function changeimg(delta1) {
     if (delta1 < 0) {
	    if (num1 == {{ numImages }}) {
		 num1 = 0;
	    } else {
		 num1 = num1 + 1;
	    }
     } 
     else {
	    if (num1 == 0) {
		 num1 = {{ numImages }};
	    } else {
		 num1 = num1 - 1;
	    }
     }
		 
     if(allImages1[num1]){
         var pixels1=context1.createImageData({{ width }}, {{ height }});
         for (var t=0; t<{{ width }}*{{ height }}*4; t++){
		pixels1.data[t]=allImages1[num1].data[t];
         }
	 
	 //*************** Add ROI Contours **********************
	 {% for roi in contourData %}
         if($('#{{ roi.roiName }}_1').is(":checked")) {
           var contourIndex = {{ roi.roiName }}_ct_sop_ids1.indexOf(all_ct_sop_ids[num1]);
           if (contourIndex!=-1) {
	             for(var i=0;i<{{ roi.roiName }}_rows1[contourIndex].length;i++){
			 pixels1.data[4*({{ width }}*({{ roi.roiName }}_rows1[contourIndex][i]-1)+{{ roi.roiName }}_columns1[contourIndex][i])]=roiColors['{{ roi.roiName }}'][0];
			 pixels1.data[4*({{ width }}*({{ roi.roiName }}_rows1[contourIndex][i]-1)+{{ roi.roiName }}_columns1[contourIndex][i])+1]=roiColors['{{ roi.roiName }}'][1];
			 pixels1.data[4*({{ width }}*({{ roi.roiName }}_rows1[contourIndex][i]-1)+{{ roi.roiName }}_columns1[contourIndex][i])+2]=roiColors['{{ roi.roiName }}'][2];
			 pixels1.data[4*({{ width }}*({{ roi.roiName }}_rows1[contourIndex][i]-1)+{{ roi.roiName }}_columns1[contourIndex][i])+3]=200;
		      }
             }
          }
          {% endfor %}

         //************ Add Isodose Contours ********************
         {% for isodose in isodoseData %}
         if($('#{{ isodose.isodoseValue }}_1').is(":checked")) {
           var isodoseIndex = {{ isodose.isodoseValue }}_ct_sop_ids1.indexOf(all_ct_sop_ids1[num1]);
           if (isodoseIndex!=-1) {
	             for(var i=0;i<{{ isodose.isodoseValue }}_rows1[isodoseIndex].length;i++){
			 pixels1.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows1[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns1[isodoseIndex][i])]=isodoseColors['{{ isodose.isodoseValue }}'][0];
			 pixels1.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows1[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns1[isodoseIndex][i])+1]=isodoseColors['{{ isodose.isodoseValue }}'][1];
			 pixels1.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows1[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns1[isodoseIndex][i])+2]=isodoseColors['{{ isodose.isodoseValue }}'][2];
			 pixels1.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows1[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns1[isodoseIndex][i])+3]=200;
		      }
             }
          }
 
          {% endfor %}

	  context1.putImageData(pixels1, 0, 0);
	  var currentImg1 = document.getElementById("myCanvas1");
          scaledContext1.drawImage(currentImg1, 0, 0, 350, 350);

      }
}    

wheel1(slideshow1, function(e,delta1){changeimg(delta1)}, false);
						 
})

</script>

<!--#################### JS for Image 2 #####################-->

<script>
var num = 0;

//******** SET COLORS ************
var isodoseColors = {'forty':[153,255,255],'fifty':[0,255,204],'sixty':[204,255,0],'seventy':[255,255,0],'eighty':[255,204,0],'ninety':[255,102,0],'ninetyFive':[255,51,51]};

var roiColors = { {% for roi in contourData %}'{{ roi.roiName }}':{{ roi.colorSquare }} {% if not forloop.last %},{% endif %}{% endfor %} };
var canvas = document.getElementById("myCanvas2");
var context = canvas.getContext("2d");
var scaledCanvas = document.getElementById("scaledCanvas2");
var scaledContext = scaledCanvas.getContext("2d");
scaledContext.fillStyle="#000000";
scaledContext.fillRect(0,0,600,400);
//var imgd = context.createImageData({{ width }}, {{ height }});
//var pix1 = imgd.data;

window.allImages = new Array({{ numImages }} + 1);

var c1=0;
window.consolidateImages1_1 = function(pix, index) {
         c1=c1+1;
         var currentImage = context.createImageData({{ width }},{{ height }});
	 for (var i = 0; n = pix.length, i < n; i += 4) {
                  currentImage.data[i]=pix[i];
		  currentImage.data[i+1]=pix[i+1];
		  currentImage.data[i+2]=pix[i+2];
                  currentImage.data[i+3]=pix[i+3];
	 }
	 if(index) allImages[index] = currentImage;
         else allImages.push(currentImage);

         //If the first image has loaded, display it
         if (index==0){
              context.putImageData(currentImage, 0, 0);
	      var currentImg = document.getElementById("myCanvas2");
	      scaledContext.drawImage(currentImg, 0, 0, 350, 350);						 
         }

         $(function() {
                $( ".progress-label2").text('Loading Images ..');
                $( "#progressbar2" ).progressbar({
                       value: c1
                });
         });
 
        if (c1=={{ numImages }}) document.getElementById('progressbar2').style.display = 'none';
}

for (var i = 0; n = {{ numImages }}, i < n; i += 1) {
         var jsss = document.createElement('script');
         jsss.setAttribute("type", "text/javascript");
	 jsss.setAttribute("src", "/static/jsPixelData/1_1/" + Math.abs(i) + "_1.js");
	 document.getElementsByTagName("head")[0].appendChild(jsss);
}

//******************* DEFINE VARIABLES FOR ROIs ****************

{% for roi in contourData %}
var {{ roi.roiName }}_ct_sop_ids = {{ roi.contour_ct_sop_ids }};
{{ roi.roiName }}_rows = new Array()
{{ roi.roiName }}_columns = new Array()
var {{ roi.roiName }}_r = {{ roi.rowCoords }};
var {{ roi.roiName }}_c = {{ roi.columnCoords }};
    for (var n=0;n<{{ roi.roiName }}_r.length;n++) {
          {{ roi.roiName }}_rows[n] = {{ roi.roiName }}_r[n].substring(1,{{ roi.roiName }}_r[n].length-1).split(",");	
          {{ roi.roiName }}_columns[n] = {{ roi.roiName }}_c[n].substring(1,{{ roi.roiName }}_c[n].length-1).split(",");
	  for (var m=0 ; m<{{ roi.roiName }}_rows[n].length;m++) {
	           {{ roi.roiName }}_rows[n][m] = parseInt({{ roi.roiName }}_rows[n][m]);
                   {{ roi.roiName }}_columns[n][m] = parseInt({{ roi.roiName }}_columns[n][m]);
          }
    }
{% endfor %}

//****************** GET SOP IDs OF ALL CT IMAGES **************

var all_ct_sop_ids = {{ ct_sop_ids }};

//******************* DEFINE VARIABLES FOR ISODOSE **************

{% for isodose in isodoseData %}
var {{ isodose.isodoseValue }}_ct_sop_ids = {{ isodose.isodose_ct_sop_ids }};
{{ isodose.isodoseValue }}_rows = new Array()
{{ isodose.isodoseValue }}_columns = new Array()
var {{ isodose.isodoseValue }}_r = {{ isodose.rowCoords }};
var {{ isodose.isodoseValue }}_c = {{ isodose.columnCoords }};
    for (var n=0;n<{{ isodose.isodoseValue }}_r.length;n++) {
          {{ isodose.isodoseValue }}_rows[n] = {{ isodose.isodoseValue }}_r[n].substring(1,{{ isodose.isodoseValue }}_r[n].length-1).split(",");	
          {{ isodose.isodoseValue }}_columns[n] = {{ isodose.isodoseValue }}_c[n].substring(1,{{ isodose.isodoseValue }}_c[n].length-1).split(",");
	  for (var m=0 ; m<{{ isodose.isodoseValue }}_rows[n].length;m++) {
	           {{ isodose.isodoseValue }}_rows[n][m] = parseInt({{ isodose.isodoseValue }}_rows[n][m]);
                   {{ isodose.isodoseValue }}_columns[n][m] = parseInt({{ isodose.isodoseValue }}_columns[n][m]);
          }
    }
{% endfor %}


// ****************** MOUSEWHEEL ACTIONS ************************

$(function () {
function wheel(obj, fn, useCapture) {
         var mousewheelevt = (/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel"; //FF doesn't recognize mousewheel as of FF3.x  
         if (obj.attachEvent) //if IE (and Opera depending on user setting)  
                  obj.attachEvent("on" + mousewheelevt, handler, useCapture);
         else if (obj.addEventListener) //WC3 browsers  
                  obj.addEventListener(mousewheelevt, handler, useCapture);

         function handler(event) {
         var delta = 0;
         var event = window.event || event;
         var delta = event.detail ? -event.detail : event.wheelDelta / 3;
         if (event.preventDefault)
               event.preventDefault();
         event.returnValue = false;
         return fn.apply(obj, [event, delta]);
         }
}

var slideshow = document.getElementById("scaledCanvas2");
var num = 0;

function changeimg(delta) {
     if (delta < 0) {
	    if (num == {{ numImages }}) {
		 num = 0;
	    } else {
		 num = num + 1;
	    }
     } 
     else {
	    if (num == 0) {
		 num = {{ numImages }};
	    } else {
		 num = num - 1;
	    }
     }
		 
     if(allImages[num]){
         var pixels=context.createImageData({{ width }}, {{ height }});
         for (var t=0; t<{{ width }}*{{ height }}*4; t++){
		pixels.data[t]=allImages[num].data[t];
         }
	 
	 //*************** Add ROI Contours **********************
	 {% for roi in contourData %}
         if($('#{{ roi.roiName }}_2').is(":checked")) {
           var contourIndex = {{ roi.roiName }}_ct_sop_ids.indexOf(all_ct_sop_ids[num]);
           if (contourIndex!=-1) {
	             for(var i=0;i<{{ roi.roiName }}_rows[contourIndex].length;i++){
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])]=roiColors['{{ roi.roiName }}'][0];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+1]=roiColors['{{ roi.roiName }}'][1];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+2]=roiColors['{{ roi.roiName }}'][2];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+3]=200;
		      }
             }
          }
          {% endfor %}

         //************ Add Isodose Contours ********************
         {% for isodose in isodoseData %}
         if($('#{{ isodose.isodoseValue }}_2').is(":checked")) {
           var isodoseIndex = {{ isodose.isodoseValue }}_ct_sop_ids.indexOf(all_ct_sop_ids[num]);
           if (isodoseIndex!=-1) {
	             for(var i=0;i<{{ isodose.isodoseValue }}_rows[isodoseIndex].length;i++){
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])]=isodoseColors['{{ isodose.isodoseValue }}'][0];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+1]=isodoseColors['{{ isodose.isodoseValue }}'][1];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+2]=isodoseColors['{{ isodose.isodoseValue }}'][2];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+3]=200;
		      }
             }
          }
 
          {% endfor %}

	  context.putImageData(pixels, 0, 0);
	  var currentImg = document.getElementById("myCanvas2");
          scaledContext.drawImage(currentImg, 0, 0, 350, 350);

      }
}    

wheel(slideshow, function(e,delta){changeimg(delta)}, false);
						 
})

</script>

{% endblock %}
