{% extends 'base.html' %}

{% block title %}Search Summary{% endblock %}

{% block head %} 
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/redmond/jquery-ui.css">
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<style type="text/css">
#graph-container{width:350px; height:350px;}
#draggable{position: absolute; right: 100px; top: 200px; width:360px; height:380px; padding: 2px; display:none; z-index:3;}
.row {background-color: black; margin: 0px; position: relative;}
.container {margin:0px auto;}
.panel-body {padding: 13px;}
#mtl {margin-top: 15px; padding-right: 50px;}
#progressbar {width: 100%;}
#myCanvas {display: none;}
.roiListContainer {width: 150px;}
table {table-layout:fixed;} 
.ui-progressbar { position: relative;}
.progress-label { position: absolute; left: 42%; top: 4px; font-weight: bold; text-shadow: 1px 1px 0 #fff;}
.table tbody>tr>td {background-color:black; padding: 1px 1px 0px 1px; border-top:0px;}
.table tbody>tr>th {text-align:center; border-top: 0px; border-bottom: 1px solid #D0D0D0;}
.table {font-size: 14px;}
td.center {text-align: center; vertical-align:middle;}
th#whiteText {color: white; font-weight:bold;}
td#white{color:white; font-weight:bold;}
{% for roi in contourData %}
span#{{ roi.roiName }}_td.badge {background-color:rgb{{ roi.colorRound }};font-size:6px;border-radius:5px;}
{% endfor %}
{% for isodose in isodoseData %}
span#{{ isodose.isodoseValue }}_td.badge {background-color:rgb{{ isodose.colorRound }};font-size:6px;border-radius:5px;}
{% endfor %}
h3.panel-title{font-size: 18px; text-align:center;}
#showDVH {position: absolute; bottom: 30px; left: 30px; z-index:2;}
</style>
{% endblock %}

{% block body %}

<div class="container">
<div class="panel panel-default">
<div class="panel-heading">
<h3 class="panel-title"><a href="http://dsrt.usc.edu/matchAlgo/">[ Back to Search Summary ]</a>&nbsp;&nbsp;DICOM RT Data Review</h3>
</div><!--panel-heading-->
<div class="panel-body">
    <canvas id="myCanvas" width="{{ width }}" height="{{ height }}"></canvas>
<!--    <div class="page-header">
           <h1>Data Review</h1>
    </div>     -->
    <div class="row">
           <div class="col-md-9">
                <div id="scaledCanvasDiv"><canvas id="scaledCanvas" width="1060px" height="535px"></canvas></div>
           </div>
            
                <div class="col-md-3">
		              <div id="mtl">
                                     <table class="table">
				     <th id="whiteText" colspan="3">SELECT REGIONS OF INTEREST</th>
		                     {% for roi in contourData %}
                                     <tr>
				     <td class="center"><span class="badge" id="{{ roi.roiName }}_td">&nbsp;</span></td>
                                     <td id="white">{{ roi.roiName }}</td>
                                     <td class="center"><input type="checkbox" id="{{ roi.roiName }}"></td>
		                     </tr>
		                     {% endfor %}
                                     </table>
			     <!-- </div>--><!--mtl-->
		<!--<div class="col-md-2">-->
			      <!--<div id="mtl">-->
				     <table class="table">
				     <th id="whiteText" colspan="3">SELECT ISODOSE CURVES</th>
				     <tr><td class="center"><span class="badge" id="forty_td">&nbsp;</span></td><td id="white">40% </td><td class="center"><input type="checkbox" id="forty"></td></tr>
				     <tr><td class="center"><span class="badge" id="fifty_td">&nbsp;</span></td><td id="white">50% </td><td class="center"><input type="checkbox" id="fifty"></td></tr>
				     <tr><td class="center"><span class="badge" id="sixty_td">&nbsp;</span></td><td id="white">60% </td><td class="center"><input type="checkbox" id="sixty"></td></tr>
				     <tr><td class="center"><span class="badge" id="seventy_td">&nbsp;</span></td><td id="white">70% </td><td class="center"><input type="checkbox" id="seventy"></td></tr>
				     <tr><td class="center"><span class="badge" id="eighty_td">&nbsp;</span></td><td id="white">80% </td><td class="center"><input type="checkbox" id="eighty"></td></tr>
				     <tr><td class="center"><span class="badge" id="ninety_td">&nbsp;</span></td><td id="white">90% </td><td class="center"><input type="checkbox" id="ninety"></td></tr>
				     <tr><td class="center"><span class="badge" id="ninetyFive_td">&nbsp;</span></td><td id="white">95%</td><td class="center"><input type="checkbox" id="ninetyFive"></td></tr>
				     </table>
			      </div><!--mtl-->
		</div><!--col-md-2-->
         <button type="button" class="btn btn-default" id="showDVH">Show DVH</button>
    </div><!--row-->
    <div id="progressbar"><div class="progress-label"></div></div>
</div><!--panel-body-->
</div><!--panel-->
</div><!--container-->
<div id="draggable" class="ui-widget-content"><span style="float:right; cursor: pointer;" onclick="javascript: document.getElementById('draggable').style.display = 'none';">[ x ]</span><div id="graph-container"></div></div>
<script>

$(function () { 

    $( "#draggable" ).draggable();
    $( "#showDVH" ).click(function() { 
                  //$( "#draggable" ).draggable( "destroy" ); 

                  if (!document.getElementById("draggable").style.display || 
                       document.getElementById("draggable").style.display=="none") {
                        document.getElementById("draggable").style.display="block";
                  }
                  else {document.getElementById("draggable").style.display="none";}
    });
    $('#graph-container').highcharts({
        
        chart: {type: 'spline'},
        
        title: {text: 'Anatomical Feature Analysis'},

        xAxis: { minPadding: 0.05, maxPadding: 0.05},

        yAxis: { max:100, min:0},

        series:[
        {% for roi in contourData %}
        { type:'spline', lineWidth: 3, marker:{enabled:false}, name:'{{ roi.roiName }}', data: {{ roi.dvh }}}{% if not forloop.last %},{% endif %}
        {% endfor %}
        ]
     });
});

var num = 0;
/*var scaledCanvasDiv = document.getElementById('scaledCanvasDiv');
var canvasWidth = 0.82*screen.width;
scaledCanvasDiv.setAttribute("style", "width:"+canvasWidth+"px");
var scaledCanvas = document.getElementById("scaledCanvas");
scaledCanvas.setAttribute("style", "width:" + canvasWidth +"px");*/
//******** SET COLORS ************
var isodoseColors = {'forty':[153,255,255],'fifty':[0,255,204],'sixty':[204,255,0],'seventy':[255,255,0],'eighty':[255,204,0],'ninety':[255,102,0],'ninetyFive':[255,51,51]};

var roiColors = { {% for roi in contourData %}'{{ roi.roiName }}':{{ roi.colorSquare }} {% if not forloop.last %},{% endif %}{% endfor %} };
var canvas = document.getElementById("myCanvas");
var context = canvas.getContext("2d");
var scaledCanvas = document.getElementById("scaledCanvas");
var scaledContext = scaledCanvas.getContext("2d");
//var imgd = context.createImageData({{ width }}, {{ height }});
//var pix1 = imgd.data;

function init_canvas() {
scaledContext.fillStyle="#000000";
scaledContext.fillRect(0,0,1060,535);
scaledContext.fillStyle = "#FFFFFF";
}

function canvas_text() {
scaledContext.font = "normal 14px sans-serif";
scaledContext.fillText("Patient ID: {{ PatientID }}",15,30);
scaledContext.fillText("Study ID: {{ StudyID }}",15,50);
scaledContext.fillText("Study Description: {{ StudyDescription }}",15,70);
scaledContext.fillText("Series Number: {{ SeriesNumber }}",15,90);
scaledContext.fillText("Series Description: {{ SeriesDescription }}",15,110);
}

init_canvas();
canvas_text();


window.allImages = new Array({{ numImages }} + 1);

var c=0;
window.consolidateImages = function(pix, index) {
         c=c+1;
         var currentImage = context.createImageData({{ width }},{{ height }});
	 for (var i = 0; n = pix.length, i < n; i += 4) {
                  currentImage.data[i]=pix[i];
		  currentImage.data[i+1]=pix[i+1];
		  currentImage.data[i+2]=pix[i+2];
                  currentImage.data[i+3]=pix[i+3];
	 }
	 if(index) allImages[index] = currentImage;
         else allImages.push(currentImage);

         //If the first image has loaded, display it
         if (index==0){
              context.putImageData(currentImage, 0, 0);
	      var currentImg = document.getElementById("myCanvas");
	      scaledContext.drawImage(currentImg, 200, 0, 512, 512);		           scaledContext.font = "normal 17px sans-serif";
              scaledContext.fillText("Slice 1 / "+String({{ numImages }}+1),400,520);
              canvas_text();				 
         }

         $(function() {
                $( ".progress-label").text('Loading Images ..');
                $( "#progressbar" ).progressbar({
                       value: c
                });
         });
 
        if (c=={{ numImages }}) document.getElementById('progressbar').style.display = 'none';
}

for (var i = 0; n = {{ numImages }}, i < n; i += 1) {
         var jsss = document.createElement('script');
         jsss.setAttribute("type", "text/javascript");
	 jsss.setAttribute("src", "/static/jsPixelData/"+{{ fk_patient_id }}+"/" + Math.abs(i) + ".js");
	 document.getElementsByTagName("head")[0].appendChild(jsss);
}

//******************* DEFINE VARIABLES FOR ROIs ****************

{% for roi in contourData %}
var {{ roi.roiName }}_ct_sop_ids = {{ roi.contour_ct_sop_ids }};
{{ roi.roiName }}_rows = new Array()
{{ roi.roiName }}_columns = new Array()
var {{ roi.roiName }}_r = {{ roi.rowCoords }};
var {{ roi.roiName }}_c = {{ roi.columnCoords }};
    for (var n=0;n<{{ roi.roiName }}_r.length;n++) {
          {{ roi.roiName }}_rows[n] = {{ roi.roiName }}_r[n].substring(1,{{ roi.roiName }}_r[n].length-1).split(",");	
          {{ roi.roiName }}_columns[n] = {{ roi.roiName }}_c[n].substring(1,{{ roi.roiName }}_c[n].length-1).split(",");
	  for (var m=0 ; m<{{ roi.roiName }}_rows[n].length;m++) {
	           {{ roi.roiName }}_rows[n][m] = parseInt({{ roi.roiName }}_rows[n][m]);
                   {{ roi.roiName }}_columns[n][m] = parseInt({{ roi.roiName }}_columns[n][m]);
          }
    }
{% endfor %}

//****************** GET SOP IDs OF ALL CT IMAGES **************

var all_ct_sop_ids = {{ ct_sop_ids }};

//******************* DEFINE VARIABLES FOR ISODOSE **************

{% for isodose in isodoseData %}
var {{ isodose.isodoseValue }}_ct_sop_ids = {{ isodose.isodose_ct_sop_ids }};
{{ isodose.isodoseValue }}_rows = new Array()
{{ isodose.isodoseValue }}_columns = new Array()
var {{ isodose.isodoseValue }}_r = {{ isodose.rowCoords }};
var {{ isodose.isodoseValue }}_c = {{ isodose.columnCoords }};
    for (var n=0;n<{{ isodose.isodoseValue }}_r.length;n++) {
          {{ isodose.isodoseValue }}_rows[n] = {{ isodose.isodoseValue }}_r[n].substring(1,{{ isodose.isodoseValue }}_r[n].length-1).split(",");	
          {{ isodose.isodoseValue }}_columns[n] = {{ isodose.isodoseValue }}_c[n].substring(1,{{ isodose.isodoseValue }}_c[n].length-1).split(",");
	  for (var m=0 ; m<{{ isodose.isodoseValue }}_rows[n].length;m++) {
	           {{ isodose.isodoseValue }}_rows[n][m] = parseInt({{ isodose.isodoseValue }}_rows[n][m]);
                   {{ isodose.isodoseValue }}_columns[n][m] = parseInt({{ isodose.isodoseValue }}_columns[n][m]);
          }
    }
{% endfor %}


// ****************** MOUSEWHEEL ACTIONS ************************

$(function () {
function wheel(obj, fn, useCapture) {
         var mousewheelevt = (/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel"; //FF doesn't recognize mousewheel as of FF3.x  
         if (obj.attachEvent) //if IE (and Opera depending on user setting)  
                  obj.attachEvent("on" + mousewheelevt, handler, useCapture);
         else if (obj.addEventListener) //WC3 browsers  
                  obj.addEventListener(mousewheelevt, handler, useCapture);

         function handler(event) {
         var delta = 0;
         var event = window.event || event;
         var delta = event.detail ? -event.detail : event.wheelDelta / 3;
         if (event.preventDefault)
               event.preventDefault();
         event.returnValue = false;
         return fn.apply(obj, [event, delta]);
         }
}

var slideshow = document.getElementById("scaledCanvas");
var num = 0;

function changeimg(delta) {
     if (delta < 0) {
	    if (num == {{ numImages }}) {
		 num = 0;
	    } else {
		 num = num + 1;
	    }
     } 
     else if (delta>0){
	    if (num == 0) {
		 num = {{ numImages }};
	    } else {
		 num = num - 1;
	    }
     }
		 
     if(allImages[num]){
         var pixels=context.createImageData({{ width }}, {{ height }});
         for (var t=0; t<{{ width }}*{{ height }}*4; t++){
		pixels.data[t]=allImages[num].data[t];
         }
	 
	 //*************** Add ROI Contours **********************
	 {% for roi in contourData %}
         if($('#{{ roi.roiName }}').is(":checked")) {
           var contourIndex = {{ roi.roiName }}_ct_sop_ids.indexOf(all_ct_sop_ids[num]);
           if (contourIndex!=-1) {
	             for(var i=0;i<{{ roi.roiName }}_rows[contourIndex].length;i++){
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])]=roiColors['{{ roi.roiName }}'][0];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+1]=roiColors['{{ roi.roiName }}'][1];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+2]=roiColors['{{ roi.roiName }}'][2];
			 pixels.data[4*({{ width }}*({{ roi.roiName }}_rows[contourIndex][i]-1)+{{ roi.roiName }}_columns[contourIndex][i])+3]=255;
		      }
             }
          }
          {% endfor %}

         //************ Add Isodose Contours ********************
         {% for isodose in isodoseData %}
         if($('#{{ isodose.isodoseValue }}').is(":checked")) {
           var isodoseIndex = {{ isodose.isodoseValue }}_ct_sop_ids.indexOf(all_ct_sop_ids[num]);
           if (isodoseIndex!=-1) {
	             for(var i=0;i<{{ isodose.isodoseValue }}_rows[isodoseIndex].length;i++){
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])]=isodoseColors['{{ isodose.isodoseValue }}'][0];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+1]=isodoseColors['{{ isodose.isodoseValue }}'][1];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+2]=isodoseColors['{{ isodose.isodoseValue }}'][2];
			 pixels.data[4*({{ width }}*({{ isodose.isodoseValue }}_rows[isodoseIndex][i]-1)+{{ isodose.isodoseValue }}_columns[isodoseIndex][i])+3]=255;
		      }
             }
          }
 
          {% endfor %}

	  context.putImageData(pixels, 0, 0);
	  var currentImg = document.getElementById("myCanvas");
          scaledCanvas.width = scaledCanvas.width;
          init_canvas()				     
          scaledContext.drawImage(currentImg, 200, 0, 512, 512);
          scaledContext.font = "normal 17px sans-serif";
	  scaledContext.fillText("Slice "+String(num+1)+" / "+String({{ numImages }}+1),400,520);
          canvas_text();

      }
}    

wheel(slideshow, function(e,delta){changeimg(delta)}, false);

{% for roi in contourData %}

$('#{{ roi.roiName }}').click(function() {
changeimg(0);
});

{% endfor %}

{% for isodose in isodoseData %}

$('#{{ isodose.isodoseValue }}').click(function() {
changeimg(0);
});

{% endfor %}
						 
})

</script>

{% endblock %}
